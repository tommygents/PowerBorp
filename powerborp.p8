pico-8 cartridge // http://www.pico-8.com
version 38
__lua__
--main

--declaring variables 
--tube vars 
tubes={}
tube_num=3
tubes_y=-100
tubes_x=200
offset=96
gap=50
tube_v=1 -- velocity, giving the parallax effect this element type. The higher the number, the faster it will move relative to everything else

--ground vars
ground={}
ground_num=4
ground_v=1.5

--cloud vars
clouds={}
cloud_num=3
cloud_v=0.5

--hill vars
hills={}
hill_num=3
hill_v=0.7

--bird vars
bird_x=10
bird_y=10
bird_v=0
bird_spr=12
gravity=0.1
jump_force=2
zpressed=false
xpressed=false

--powerup vars
powerups={}
powerup_x=-10
powerup_y=20
powerup_num=3
powerup_ind=1
powerup_vis=false
powerup_active=false
powerup_have=false
rightpressed=false
jetspr=46
powerup_timermax=78
powerup_spr=44
powerup_offset=96
powerup_v=1
next_x=150
next_x_debug=150


--main menu title vars
title_y=27
title_tar=30
title_min=20
title_max=30

--end screen fx vars
end_time=0
end_y=-12
end_tar=22

score=0
best=0

state="menu"

--run once at start

function _init() --basically start in unity
	--make all "objects" --creating objects, but it doesn't draw it yet
	for i=0,tube_num do
		add_tube(tubes_x+i*offset)
	end
	for i=0,ground_num do
		add_ground(i*32)
	end
	for i=0,cloud_num do
		add_cloud(i*128)
	end
	for i=0,hill_num do
		add_hill(i*128)
	end
	for i=0,powerup_num do
		add_powerup(next_x,powerup_y)
		next_x+=powerup_offset*flr(rnd(6)+1)
		next_x_debug = next_x
		end
end

--runs every frame
function _update60() --basically update runs every frame, but also you can do update() so it's gonna be low rate
	if(state=="menu")then --basically state machine based on the state variable changing it's string value
		menu_update()
	elseif(state=="game")then
		game_update()
	elseif(state=="end")then
		end_update()
	end
end

--runs every frame
function _draw() --draws all the elements based on the statemachine too
	if(state=="menu")then
		menu_draw()
	elseif(state=="game")then
		game_draw()
	elseif(state=="end")then
		end_draw()
	end
end

--resets all gameplay vars
function reset_game() -- all the variables getting back to their start positions
	gravity=0.1
	
	pressed=false

	title_y=27
	title_tar=30
	
	if(score>best) best=score

	score=0
	powerup_active=false
	powerup_have=false
	bird_x=10
	bird_y=10
	bird_v=0
	bird_spr=12
	
	end_time=0
	end_y=-12
	end_tar=22	
	t_count=0
	--bugfix: reset tube table.
 	tubes = {}
 
	 --adds new tubes to table/spawns them.   
    for i=0,tube_num do
        add_tube(tubes_x+i*offset)
        --adds tube_num(3) tubes at x position plus offset times number of tubes.
    end

	powerups = {}
	next_x=150
	for i=0,powerup_num do
		add_powerup(next_x,powerup_y)
		next_x+=powerup_offset*flr(rnd(6)+1)
		next_x_debug = next_x
		end
	state="game"
	
end

-- initiates all the objects 
--make cloud obj
function add_cloud(_x) --
	add(clouds,{
		x=_x,
		y=80
	})
end

--make ground obj
function add_ground(_x)
	add(ground,{
		x=_x,
		y=112
	})
end

--make hill obj
function add_hill(_x)
	add(hills,{
		x=_x,
		y=85
	})
end

--make tube obj
--uses tubes_y as the basis to set a random height for the tubes, within the possible range 
function add_tube(_x)
	add(tubes,{
		x=_x,
		y=tubes_y+rnd(50),
		hit_w=32,
		hit_h=32
	})
end

--make powerup obj
--I'll want to change _y if I want to be able to set a random height to the powerup object
function add_powerup(_x,_y)
add(powerups, {
x=_x,
y=_y+rnd(80),
hit_w=16,
hit_h=16})
end
--draw tube obj
function draw_tube(_t) -- -t is the tube "object" that we're operating with
	for i=0,2 do
		spr(4,_t.x,_t.y+(i*32),4,4)
		_last_y=_t.y+(i*32)
	end
--the endcap on the tube
 spr(0,_t.x,_last_y+24,4,4)
--the bottom half of the tube 	
 for i=0,2 do
 	spr(4,_t.x,_last_y+gap+32+(i*32),4,4)
 end
 --the endcap on the bottom half of the tube
 spr(0,_t.x,_last_y+24+gap,4,4)

end

function draw_powerup(_p)
spr(44,_p.x,_p.y,2,2)
end

function draw_powerup_indicator()
	sspr(97,17,15,15, 54,8,8,8)
end

--check col b/t bird and tube --!!!
function overlap(_t)
	if(bird_x+8>=_t.x and
		bird_x<=_t.x+_t.hit_w and
		bird_y+8>=0 and
		bird_y<=_t.y+(3*_t.hit_h))then
		return true
	end
    if(bird_x+8>=_t.x and
        bird_x<=_t.x+_t.hit_w and
        bird_y+8>=_t.y+(3*_t.hit_h)+gap)then
		return true  --bugfix: made it so that the bird hits tubes up high
	end
end

function overlap_p(_p)
	if(bird_x+8>=_p.x and
		bird_x<=_p.x+_p.hit_w and
		bird_y+8>=_p.y and
		bird_y<=_p.y+_p.hit_h)then
		return true
	end
end

--gen lerp func for juice --title lerping between two points
function lerp(pos,tar,p) --gets a starting position, target position and uses rate to accelerate it, p for percent 
	return(1-p)*tar+p*pos --(1-p) i think smoothes out the movement 
end
-->8
--game state

function game_update() --update during the game
	-- checks all the tubes and if there are any overlap play crush sound effect and change state to the end
	for t in all(tubes) do
		if(overlap(t))then
			sfx(1)
			state="end"		
		end
		
		t.x-=tube_v --it's updating the x position based on the velocity and immitates parrallax this way
		
		if(t.x<-32)then --adding new tubes and deleting old ones
			--referencing any member of table creates a pointer, not a copy
			temp=t
			--tube_num+1 is the last tube in tubes, because for-loops start at 0 and tables start at 1
			t.x=tubes[tube_num+1].x+offset
			del(tubes,t)
			add(tubes,temp)
		end
		
		if(bird_x==t.x)then --if the bird is the same as x position of the current tube add to the score
			sfx(3)
			score+=1
			end
	
	end

	for p in all(powerups) do
		if(overlap_p(p))then
			sfx(3)
			powerup_have=true
			p.x+=next_x
			p.y=powerup_y+rnd(80)
			next_x=p.x+(powerup_offset*flr(rnd(6)+1))
			next_x_debug = next_x

		end


		
		if(p.x<-16)then
			pemp=p
			p.x+=next_x
			p.y=powerup_y+rnd(80)
			next_x=p.x+(powerup_offset*flr(rnd(6)+1))
			next_x_debug = next_x
			--del(powerups,p)
			--add(powerups,pemp)
		end	
		p.x-=powerup_v
	end
	
	next_x-=powerup_v
	
	for g in all(ground) do --adding new ground and deleting old one
		
		if(bird_y >= g.y)then
			sfx(1)
			state="end"	
		end --bugfix: ends the game if the bird touches the ground, rather than letting it plummet 

		g.x-=ground_v
		
		if(g.x<-32)then
			temp=g
			g.x=ground[ground_num+1].x+32
			del(ground,g)
			add(ground,temp)
		end
	
	end
		
	for c in all(clouds) do --adding new clouds and deleting old ones
		c.x-=cloud_v
		
		if(c.x<-128)then
			temp=c
			c.x=clouds[cloud_num].x+128
			del(clouds,c)
			add(clouds,temp)
		end
	
	end
		
	for h in all(hills) do --adding new hills and deleting old ones
		h.x-=hill_v
		
		if(h.x<-128)then
			temp=h
			h.x=hills[hill_num].x+128
			del(hills,h)
			add(hills,temp)
		end
	
	end
	if(powerup_active)then
	jet_move()
	else
	bird_move() --initializing movement
	end
	
end
--
function game_draw()
	
	cls(12) --setting the background color to the sky
	-- draws all the sprites for each of the elements
	for c in all(clouds) do
		spr(64,c.x,c.y,16,4) --spr means sprite and () are parameters
	end
		
	for h in all(hills) do
		spr(128,h.x,h.y,16,4)
	end
		
	for t in all(tubes) do
		draw_tube(t)
	end
		
	for g in all(ground) do
		spr(8,g.x,g.y,4,4)
	end
	-- draws a bird
	spr(bird_spr,bird_x,bird_y,2,2)
	--adds jet
	if(powerup_active)then
		spr(jetspr,bird_x-3,bird_y)
	end
	rectfill(64,10,66,14,7) --score square at the top of the screen
	print(score,64,10,0)--prints the score 
	print(next_x,5,20,0)--debugging message 
	print(next_x_debug,5,40,0)--debugging message 
	for p in all(powerups) do
		draw_powerup(p)
	end

	if(powerup_have)do
		draw_powerup_indicator()
	end
end

function bird_move() 
	
	if (not powerup_active)then
		if(btn(1,0) and powerup_have)then
			powerup_active=true
			powerup_timer=powerup_timermax
			powerup_have=false
			rightpressed=true
			end
		if(not btn(1,0))then
		rightpressed=false
		end
		if (not powerup_active)then
		
			bird_v+=gravity --adding gravity to the bird's velocity
			bird_y+=bird_v --bird's y position is getting updated by velocity
			if (bird_y>=0 and bird_y<=128)then
				if(btn(4,0) and not zpressed)then --btn is input checker that expects "z" input, as 4 is preset to "z" key and 0 means 1 player
					sfx(0)
					bird_v-=jump_force --add jump_force to bird's velocity
					bird_spr=14 --changing the sprite
					zpressed=true
				end
		
				if(not btn(4,0))then
					bird_spr=12 --changing the sprite back to original
					zpressed=false --resetting pressed so you can press again
				end
			end
		end
	end
end



function jet_move()
	powerup_timer=(powerup_timer - 1)
	if (powerup_timer%10<5)then
		jetspr=46
	else
		jetspr=47
	end
	if(powerup_timer<=0)do
		powerup_active=false
	end
end


-->8
--menu

function menu_update()
	--moving all the objects in the menu 
	for c in all(clouds) do
		c.x-=cloud_v --
		
		if(c.x<-128)then
			temp=c
			c.x=clouds[cloud_num].x+128
			del(clouds,c)
			add(clouds,temp)
		end
	
	end
		
	for h in all(hills) do
		h.x-=hill_v
		
		if(h.x<-128)then
			temp=h
			h.x=hills[hill_num].x+128
			del(hills,h)
			add(hills,temp)
		end
	
	end
	
	for g in all(ground) do
		
		g.x-=ground_v
		
		if(g.x<-32)then
			temp=g
			g.x=ground[ground_num+1].x+32
			del(ground,g)
			add(ground,temp)
		end
	
	end

	bounce_title() --and additionally it bounces the title
	
	if(btn(5,0)) state="game" --btn 5 is x, so we start the "game" state
	
end

function menu_draw()
	--basically all the same objects are getting drawn and printed fonts
	cls(12)
	
	for c in all(clouds) do
		spr(64,c.x,c.y,16,4)
	end
		
	for h in all(hills) do
		spr(128,h.x,h.y,16,4)
	end
	
	for g in all(ground) do
		spr(8,g.x,g.y,4,4)
	end
	
	spr(192,28,title_y,9,2) --title is a sprite and it's getting drawn here
	
	print("press x to start",32,50,7)
	print("z to flap",47,60,0)
	print("right arrow to use powerup",12,70,0)

end

function bounce_title() 
	
	title_y=lerp(title_y,title_tar,0.9) --lerping the sprite from the starting position to the target position based on the 0.9 rate
	--if the title reaches the minimal we reset the target with the start position 
	if(title_y>=title_max-0.5)then 
		title_tar=title_min
	end
	--and same here
	if(title_y<=title_min+0.5)then
		title_tar=title_max
	end

end
--way to make tabs! in pico-8
-->8
--end

function end_update()
	
	bounce_back() --perform a graphical event on the bird
	
	end_time+=1 --initiating the timer to print score rows one by one
	
	end_sfx() --muusic!

	if(btn(5,0) and not xpressed)do -- BUG! X can be pressed repeatedly - FIXED
		xpressed = true
		reset_game() -- expect game to be reset with x
	end

	if(not btn(5,0)) then
		xpressed = false
	end
	
end

function end_draw() 
	
	game_draw() --so we're still drawing the game screen, but since the state has changed the velocity is not getting updated so it stops in the background

	rectfill(16,32,112,96,9) --draws the yellow background box
	
	if(end_y<end_tar) end_y+=1
	--draws sprite for end over
	spr(224,29,end_y,9,2)
	-- and prints all the info based on the time that has passed from the end of the game
	if(end_time>35)then
		print("score: "..score.."",45,50,0)
	end
	
	if(end_time>50)then
			print("best: "..best.."",47,60,0)
	end
	
	if(end_time>65)then
			print("x to restart",38,80,0)
	end

end

function bounce_back()
	
	if(bird_y<128)then --this is a grpahical effect of yeeting the bird away, 128 is a top of the screen
		gravity=1.5
		bird_v+=gravity
		bird_x-=2+rnd(4)
		bird_y+=bird_v
	end

	

end

function end_sfx() --plays different sounds at specific times in the end
	
	if(end_time==5) sfx(4)
	
	if(end_time==35) sfx(2)
	
	if(end_time==50) sfx(2)
	
	if(end_time==65) sfx(2)

end --ASCII ART GENERATED BY THE PIC-8 SPRITE RENDERER :)
__gfx__
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b333311001111111111111111111111111111111100000011111100000000001111110000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b333311001111111111111111111111111111111100000011111100000000001111110000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b333311007777777777777777777777777777777700001144888811000000114488881100
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100bbbbbbb33333333bbbbbbbb33333333b00001144888811000000114488881100
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100bbbbbb33333333bbbbbbbb33333333bb00114488888877770011448888887777
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100bbbbb33333333bbbbbbbb33333333bbb00114488888877770011448888887777
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100bbbb33333333bbbbbbbb33333333bbbb00118888888877111111888888887711
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100bbb33333333bbbbbbbb33333333bbbbb00118888888877111111888888887711
111111111111111111111111111111110011bbbbb77b7ebbbbbbbb3b333311001111111111111111111111111111111111111188888811114411118888881111
111111111111111111111111111111110011bbbbb77b7ebbbbbbbb3b333311001111111111111111111111111111111111111188888811114411118888881111
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b333311004444444444444444444444444444444444881188881199998888118888119999
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff44881188881199998888118888119999
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff11118888888811110011888888881111
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff11118888888811110011888888881111
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00001111111100000000111111110000
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00001111111100000000111111110000
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00000000000000000000aa0000000a00
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff000000000000000000aaa9a0000aa9a0
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00000088887000000aa9999600aa9996
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff0000008888700000aa9988860aa99886
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00008888888870000aa9999600aa9996
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff000088888888700000aaa9a0000aa9a0
11bbb77b7bbbbbbbbbbbbbbb3b3333110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00888811111788700000aa0000000a00
111111111111111111111111111111110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00888811111788700000000000000000
111111111111111111111111111111110011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff08888811811788870000000000000000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff08888811111788870000000000000000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00888811111788700000000000000000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00888811788888700000000000000000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00008811788870000000000000000000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00008811788870000000000000000000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00000088887000000000000000000000
000000000000000000000000000000000011bbbbb77b7ebbbbbbbb3b33331100ffffffffffffffffffffffffffffffff00000088887000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000777777777000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000077777777777770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000007777777777777777700000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000077777777777777777770000000000000000000000000000000000777777777000000000000000077777777700000000000000000
00000000000000000000000777777777777777777777000000000000000000000000000000777777777777777000000000007777777777777000000000000000
00000000000000000000007777777777777777777777700000000077777770000000000007777777777777777777000000777777777777777770000000000000
00000000077777777000077777777777777777777777770000077777777777770000000777777777777777777777700007777777777777777777000000000000
00000007777777777770077777777777777777777777770000777777777777777000007777777777777777777777770077777777777777777777700000000000
00000777777777777777777777777777777777777777777007777777777777777700077777777777777777777777777777777777777777777777770077777000
00007777777777777777777777777777777777777777777077777777777777777770077777777777777777777777777777777777777777777777777777777770
00077777777777777777777777777777777777777777777077777777777777777770777777777777777777777777777777777777777777777777777777777777
00777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
00777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
07777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
07777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
77777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777777
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000333333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000033333333333333300000000000000000000000000000000000000000000000000000000000000333333333300000000
00000000000000000000000000000000333333333333333110000000000000000000000000000000000000000000000000000000000033333333333333000000
00000000000000000000000000000000333333333333331110000000000000000000000000000000000000000000000000000000000333333333333331100000
33300000000000000000000000000000333333333333331110000000000000000000333333333300000000000000000000000000000333333333333311100333
33330000000000000000000000000000333333333333331110000000000000000033333333333333000000000000000000000000000333333333333311103333
33331000000000000000000000000000333333333333331110000000000000003333333333333333110000000000000000000000000333333333333311133333
33311000000003333333330000000000333333333333331110000000000000003333333333333331110000000000000000000000000333333333333311113333
33311000000333333333333300000000333333333333331110000000000000003333333333333331110000000000000000000000000333333333333311111333
33311000003333333333333110000000333333333333331110000000000000003333333333333331110000000000000000000000000333333333333311111333
33311000003333333333331110000000333333333333331110000000000000003333333333333331110000000000000000000000000333333333333311111333
33311000003333333333331110000000333333333333331110000000000000003333333333333331110000000000000000000000000333333333333311111333
33311000003333333333331110000000333333333333331110000000000000003333333333333331110000000000000000000000000333333333333311111333
33311000003333333333331110000000333333333333331110000000000000003333333333333331110000000000000000000000000333333333333311111333
33311000003333333333331110003333333333333333331110000000000000003333333333333331110000000033333333333000000333333333333311111333
33311000003333333333331110333333333333333333331110000003333330003333333333333331110000003333333333333310000333333333333311111333
33311000003333333333331113333333333333333333331110000033333331003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111333333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
33311000003333333333331111133333333333333333331110000033333311003333333333333331110000033333333333333111000333333333333311111333
77777777777777777777777777777777777777700077777777777777770000777777777000000000000000000000000000000000000000000000000000000000
71111111111111111117111177111171111111700071111111111111170000711111117000000000000000000000000000000000000000000000000000000000
71bbbbbb1bb1bbbbbb171bb1771bb171bb1bb1700071bbbbbb1bbbbb17777771bbbbb17000000000000000000000000000000000000000000000000000000000
71bbbbbb1bb1bbbbbb111bb1111bb111bb1bb1700071bbbbbb1bbbbb11111111bbbbb17000000000000000000000000000000000000000000000000000000000
71bb11111bb1bbbbbb1bbbbbbbbbbbb1bb1bb1700071bbb1bb1bbbbb1bbbbbb1bb1bb17000000000000000000000000000000000000000000000000000000000
71bbbbbb1bb11111bb111bb1111bb111bb1bb1700071bbbbbb1bbbbb1bbbbbb1bbbbb17000000000000000000000000000000000000000000000000000000000
71bbbbbb1bb1bbbbbb171bb1771bb171bb1bb1700071bbbbb11bb1bb1bbb1bb1bbbbb17000000000000000000000000000000000000000000000000000000000
71333333133133333317133177133171331331700071333333133333133311113311117000000000000000000000000000000000000000000000000000000000
71331111133133113317133177133171333331700071333133133333133317713317777000000000000000000000000000000000000000000000000000000000
71331777133133333317133177133171333331700071333333133333133317713317000000000000000000000000000000000000000000000000000000000000
71331707133133333317133177133171111331700071333333133333133317713317000000000000000000000000000000000000000000000000000000000000
71331707133133333317133177133171333331700071333333133333133317713317000000000000000000000000000000000000000000000000000000000000
71111707111111111117111177111171111111700071111111111111111117711117000000000000000000000000000000000000000000000000000000000000
77777707777777777777777777777777777777700077777777777777777777777777000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777777777777700077777777777777777777777000000000000000000000000000000000000000000000000000000000000000000
71111111111111111111111111111111111700071111111111111111111117000000000000000000000000000000000000000000000000000000000000000000
71bbbbbbbb1bbbbbb1bbbbbbbbbb1bbbbb1700071bbbbb1bbb1bbb1bbbbb17777777700000000000000000000000000000000000000000000000000000000000
71bbbbbbbb1bbbbbb1bbbbbbbbbb1bb1bb1700071bbbbb1bbb1bbb1bb1bb11111111700000000000000000000000000000000000000000000000000000000000
71bbbbbbbb1bbbbbb11bbbbbbbbb1bbbbb1700071bbbbb1bbb1bbb1bbbbb1bbbbbb1700000000000000000000000000000000000000000000000000000000000
71bbb1111111111bbb1bbbbbbbbb1bbbbb1700071bbbbb1bbb1bbb1bbbbb1bbbbbb1700000000000000000000000000000000000000000000000000000000000
71bbb1bbbb1bbbbbbb1bbb1bbb1b1bb1111700071bb1bb1bbb1bbb1bb1111bbb1bb1700000000000000000000000000000000000000000000000000000000000
71333133331333333313331333131331777700071333331333133313317713331111700000000000000000000000000000000000000000000000000000000000
71333111331331133313331333131331777700071333331333133313317713331777700000000000000000000000000000000000000000000000000000000000
71333333331333333313331333131331111700071333331333333313311113331700000000000000000000000000000000000000000000000000000000000000
71333333331333333313331333131333331700071333331333333313333313331700000000000000000000000000000000000000000000000000000000000000
71333333331333333313331333131333331700071333331333333313333313331700000000000000000000000000000000000000000000000000000000000000
71111111111111111111111111111111111700071111111111111111111111111700000000000000000000000000000000000000000000000000000000000000
77777777777777777777777777777777777700077777777777777777777777777700000000000000000000000000000000000000000000000000000000000000
__gff__
0000000000000000000000000000000000008080000000000000000000000000000080800000000000000000000000000000808000000000000000000000000000008080808000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
0402000014051160511a0511d05100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
940400000705106051060531105300000000000000000000000000000000000000000000000000000000000000000000000000000005000000000000000000000000000000000000000000000000000000000000
570900001505309053000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
5d05000022154251542a1540000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010c00001b1511a151141511a151191511315115151151510b1000a1000a100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
